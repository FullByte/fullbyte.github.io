{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Test test","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"#test","text":"test","title":"Test"},{"location":"tech/tools/ffmpeg/","text":"FFmpeg Examples FFmpeg is a great tool and here are some examples. Create Time Lapse Video In my case the files are from a GoPro named \"G\" followed by seven digits e.g. G0011565.jpg. The starting number of the series of pictures is 11021 in my example. Change the start_number value, the filename prefix (in this case \"G\") and the length of the number if required. More details: http://ffmpeg.org/ffmpeg-all.html#image2-1 ffmpeg -framerate 30 -start_number 11021 -i \"E:\\path\\G%07d.jpg\" -c:v libx264 \"E:\\path\\output.mp4\" Example output: Compress Video To compress an avi file you can use H.264 on the output file named e.g. \"input.avi\" and create a smaller version of the video named \"output.mkv\" More details: https://trac.ffmpeg.org/wiki/Encode/H.264 ffmpeg -i input.avi -c:v libx264 -preset slow -crf 15 output.mkv Save as AV1 Pass 1 ffmpeg.exe -i input.mp4 -c:v libaom-av1 -b:v 200k -filter:v scale=720:-1 -strict experimental -cpu-used 1 -tile-columns 2 -row-mt 1 -threads 8 -pass 1 -f mp4 NUL && ^ Pass 2 ffmpeg.exe -i input.mp4 -pix_fmt yuv420p -movflags faststart -c:v libaom-av1 -b:v 200k -filter:v scale=720:-1 -strict experimental -cpu-used 1 -tile-columns 2 -row-mt 1 -threads 8 -pass 2 output.mp4 Convert from MOV to GIF ffmpeg.exe -i input.mov -ss 00:08:08 -t 12 -filter_complex \"[0:v] fps=12,scale=720:-1\" -y scene2.gif Convert from GIF to MP4 ffmpeg -f gif -i favmeme.gif betterfavmeme.mp4 Convert from MP4 to minimized GIF Turn input.mp4 into a small output.gif by cutting the gif palette size with palettegen=max_colors=64 to improve the compression: ffmpeg -ss 00:03 -t 00:03.7 -i input.mp4 -an -vf \"transpose=2, crop=in_w-200:in_h-50:0:0, fps=11, scale=-1:360:flags=lanczos, split[s0][s1];[s0]palettegen=max_colors=64[p];[s1][p]paletteuse\" -loop 1 output.gif Stack Videos in a Grid (Horizontally and Vertically) 2 Videos Horizontally ffmpeg -i input0.mp4 -i input1.mp4 -filter_complex hstack=inputs=2 horizontal-stacked-output.mp4 2 Videos Vertically ffmpeg -i input0.mp4 -i input1.mp4 -filter_complex vstack=inputs=2 vertical-stack-output.mp4 Videos of Different Lengths ffmpeg -i input0.mp4 -i input1.mp4 -filter_complex hstack=inputs=2:shortest=1 shortest-output.mp4 2\u00d72 Grid of Videos ffmpeg -i input0.mp4 -i input1.mp4 -i input2.mp4 -i input3.mp4 -filter_complex \"[0:v][1:v]hstack=inputs=2[top]; [2:v][3:v]hstack=inputs=2[bottom]; [top][bottom]vstack=inputs=2[v]\" -map \"[v]\" finalOutput.mp4 ffmpeg -i input0.mp4 -i input1.mp4 -i input2.mp4 -i input3.mp4 -i input4.mp4 -i input5.mp4 -filter_complex \"[0:v][1:v][2:v]hstack=inputs=3[top]; [3:v][4:v][5:v]hstack=inputs=3[bottom]; [top][bottom]vstack=inputs=2[v]\" -map \"[v]\" finalOutput.mp4","title":"FFmpeg Examples"},{"location":"tech/tools/ffmpeg/#ffmpeg-examples","text":"FFmpeg is a great tool and here are some examples.","title":"FFmpeg Examples"},{"location":"tech/tools/ffmpeg/#create-time-lapse-video","text":"In my case the files are from a GoPro named \"G\" followed by seven digits e.g. G0011565.jpg. The starting number of the series of pictures is 11021 in my example. Change the start_number value, the filename prefix (in this case \"G\") and the length of the number if required. More details: http://ffmpeg.org/ffmpeg-all.html#image2-1 ffmpeg -framerate 30 -start_number 11021 -i \"E:\\path\\G%07d.jpg\" -c:v libx264 \"E:\\path\\output.mp4\" Example output:","title":"Create Time Lapse Video"},{"location":"tech/tools/ffmpeg/#compress-video","text":"To compress an avi file you can use H.264 on the output file named e.g. \"input.avi\" and create a smaller version of the video named \"output.mkv\" More details: https://trac.ffmpeg.org/wiki/Encode/H.264 ffmpeg -i input.avi -c:v libx264 -preset slow -crf 15 output.mkv","title":"Compress Video"},{"location":"tech/tools/ffmpeg/#save-as-av1","text":"","title":"Save as AV1"},{"location":"tech/tools/ffmpeg/#pass-1","text":"ffmpeg.exe -i input.mp4 -c:v libaom-av1 -b:v 200k -filter:v scale=720:-1 -strict experimental -cpu-used 1 -tile-columns 2 -row-mt 1 -threads 8 -pass 1 -f mp4 NUL && ^","title":"Pass 1"},{"location":"tech/tools/ffmpeg/#pass-2","text":"ffmpeg.exe -i input.mp4 -pix_fmt yuv420p -movflags faststart -c:v libaom-av1 -b:v 200k -filter:v scale=720:-1 -strict experimental -cpu-used 1 -tile-columns 2 -row-mt 1 -threads 8 -pass 2 output.mp4","title":"Pass 2"},{"location":"tech/tools/ffmpeg/#convert-from-mov-to-gif","text":"ffmpeg.exe -i input.mov -ss 00:08:08 -t 12 -filter_complex \"[0:v] fps=12,scale=720:-1\" -y scene2.gif","title":"Convert from MOV to GIF"},{"location":"tech/tools/ffmpeg/#convert-from-gif-to-mp4","text":"ffmpeg -f gif -i favmeme.gif betterfavmeme.mp4","title":"Convert from GIF to MP4"},{"location":"tech/tools/ffmpeg/#convert-from-mp4-to-minimized-gif","text":"Turn input.mp4 into a small output.gif by cutting the gif palette size with palettegen=max_colors=64 to improve the compression: ffmpeg -ss 00:03 -t 00:03.7 -i input.mp4 -an -vf \"transpose=2, crop=in_w-200:in_h-50:0:0, fps=11, scale=-1:360:flags=lanczos, split[s0][s1];[s0]palettegen=max_colors=64[p];[s1][p]paletteuse\" -loop 1 output.gif","title":"Convert from MP4 to minimized GIF"},{"location":"tech/tools/ffmpeg/#stack-videos-in-a-grid-horizontally-and-vertically","text":"2 Videos Horizontally ffmpeg -i input0.mp4 -i input1.mp4 -filter_complex hstack=inputs=2 horizontal-stacked-output.mp4 2 Videos Vertically ffmpeg -i input0.mp4 -i input1.mp4 -filter_complex vstack=inputs=2 vertical-stack-output.mp4 Videos of Different Lengths ffmpeg -i input0.mp4 -i input1.mp4 -filter_complex hstack=inputs=2:shortest=1 shortest-output.mp4 2\u00d72 Grid of Videos ffmpeg -i input0.mp4 -i input1.mp4 -i input2.mp4 -i input3.mp4 -filter_complex \"[0:v][1:v]hstack=inputs=2[top]; [2:v][3:v]hstack=inputs=2[bottom]; [top][bottom]vstack=inputs=2[v]\" -map \"[v]\" finalOutput.mp4 ffmpeg -i input0.mp4 -i input1.mp4 -i input2.mp4 -i input3.mp4 -i input4.mp4 -i input5.mp4 -filter_complex \"[0:v][1:v][2:v]hstack=inputs=3[top]; [3:v][4:v][5:v]hstack=inputs=3[bottom]; [top][bottom]vstack=inputs=2[v]\" -map \"[v]\" finalOutput.mp4","title":"Stack Videos in a Grid (Horizontally and Vertically)"},{"location":"tech/tools/openssl/","text":"OpenSSL Examples Examples using OpenSSL Create certificates and keys Generate a new private key and Certificate Signing Request openssl req -out CSR.csr -new -newkey rsa:2048 -nodes -keyout privateKey.key Generate a self-signed certificate (see How to Create and Install an Apache Self Signed Certificate for more info) openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout privateKey.key -out certificate.crt Generate a certificate signing request (CSR) for an existing private key openssl req -out CSR.csr -key privateKey.key -new Generate a certificate signing request based on an existing certificate openssl x509 -x509toreq -in certificate.crt -out CSR.csr -signkey privateKey.key Remove a passphrase from a private key openssl rsa -in privateKey.pem -out newPrivateKey.pem Validate Certificates and Keys Check an MD5 hash of the public key to ensure that it matches with what is in a CSR or private key openssl x509 -noout -modulus -in certificate.crt | openssl md5 openssl rsa -noout -modulus -in privateKey.key | openssl md5 openssl req -noout -modulus -in CSR.csr | openssl md5 Check an SSL connection: This displays all (including Intermediates) certificates of a given website. openssl s_client -connect www.google.com:443 Check Certificate openssl x509 -in certificate.crt -text -noout Check CSR of Certificate Decode your Certificate Signing Request (CSR) and and verify that it contains the correct information: openssl req -in mycsr.csr -noout -text Check a private key openssl rsa -in private.key -check Check a PKCS#12 file (.pfx or .p12) openssl pkcs12 -info -in keyStore.p12 Converting Using OpenSSL Convert certificates and keys to different formats to make them compatible with OS/software required. Convert a DER file (.crt .cer .der) to PEM openssl x509 -inform der -in certificate.cer -out certificate.pem Convert a PEM file to DER openssl x509 -outform der -in certificate.pem -out certificate.der Convert a PKCS#12 file (.pfx .p12) containing a private key and certificates to PEM You can add -nocerts to only output the private key or add -nokeys to only output the certificates. openssl pkcs12 -in keyStore.pfx -out keyStore.pem -nodes Convert a PEM certificate file and a private key to PKCS#12 (.pfx .p12) openssl pkcs12 -export -out certificate.pfx -inkey privateKey.key -in certificate.crt -certfile CACert.crt How to encrypt and decrypt files with OpenSSL Install openssl and the associated development libraries' Run openssl version -a to check if openssl is installed or just run this command to install all requirements for this demo: sudo apt-get install libssl-dev openssl Create a test file named \"plain.txt\" which we shall encrypt & decrypt in the next step. echo \"this is a test\" > plain.txt Encrypt and Decrypt example via Triple Data Encryption Standard The following lines will create the encrypted file \"encrypted.txt\" and decrypted file \"decrypted.txt\" . openssl des3 -in plain.txt -out encrypted.txt -pass pass:password openssl des3 -d -in encrypted.txt -out decrypted.txt -pass pass:password The file \"decrypted.txt\" should match with our test file \"plain.txt\" . diff -s plain.txt decrypted.txt Encrypt and Decrypt example via AES-256 with CBC There are plenty of ciphers availble. Run openssl help to see the cipher commands available too you. Here is another example using AES-256 with CBC. openssl aes-256-cbc -a -salt -in plain.txt -out encrypted.txt -k password openssl aes-256-cbc -d -a -in encrypted.txt -out decrypted.txt -k password Encrypt images using a key and IV openssl aes-128-cbc -K \"55555555555555555555555555555555\" -iv \"83deccd3f93b37c70d37297f319cf367\" -in WRxFKdq.png -out OMG_SAME_IMAGE.png Example screenshot: HTTPS webserver openssl req -x509 -newkey rsa:4096 -keyout /tmp/key.pem -out /tmp/cert.pem -nodes && openssl s_server -WWW -port 8443 -cert /tmp/cert.pem -key /tmp/key.pem openssl req -newkey rsa:2048 -nodes -x509 -subj '/CN=name-you-want.example.com' -days 3650 -out server.cert -keyout server.key openssl s_server -accept 7781 -cert server.cert -key server.key -WWW","title":"OpenSSL Examples"},{"location":"tech/tools/openssl/#openssl-examples","text":"Examples using OpenSSL","title":"OpenSSL Examples"},{"location":"tech/tools/openssl/#create-certificates-and-keys","text":"Generate a new private key and Certificate Signing Request openssl req -out CSR.csr -new -newkey rsa:2048 -nodes -keyout privateKey.key Generate a self-signed certificate (see How to Create and Install an Apache Self Signed Certificate for more info) openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout privateKey.key -out certificate.crt Generate a certificate signing request (CSR) for an existing private key openssl req -out CSR.csr -key privateKey.key -new Generate a certificate signing request based on an existing certificate openssl x509 -x509toreq -in certificate.crt -out CSR.csr -signkey privateKey.key Remove a passphrase from a private key openssl rsa -in privateKey.pem -out newPrivateKey.pem","title":"Create certificates and keys"},{"location":"tech/tools/openssl/#validate-certificates-and-keys","text":"Check an MD5 hash of the public key to ensure that it matches with what is in a CSR or private key openssl x509 -noout -modulus -in certificate.crt | openssl md5 openssl rsa -noout -modulus -in privateKey.key | openssl md5 openssl req -noout -modulus -in CSR.csr | openssl md5 Check an SSL connection: This displays all (including Intermediates) certificates of a given website. openssl s_client -connect www.google.com:443 Check Certificate openssl x509 -in certificate.crt -text -noout Check CSR of Certificate Decode your Certificate Signing Request (CSR) and and verify that it contains the correct information: openssl req -in mycsr.csr -noout -text Check a private key openssl rsa -in private.key -check Check a PKCS#12 file (.pfx or .p12) openssl pkcs12 -info -in keyStore.p12","title":"Validate Certificates and Keys"},{"location":"tech/tools/openssl/#converting-using-openssl","text":"Convert certificates and keys to different formats to make them compatible with OS/software required. Convert a DER file (.crt .cer .der) to PEM openssl x509 -inform der -in certificate.cer -out certificate.pem Convert a PEM file to DER openssl x509 -outform der -in certificate.pem -out certificate.der Convert a PKCS#12 file (.pfx .p12) containing a private key and certificates to PEM You can add -nocerts to only output the private key or add -nokeys to only output the certificates. openssl pkcs12 -in keyStore.pfx -out keyStore.pem -nodes Convert a PEM certificate file and a private key to PKCS#12 (.pfx .p12) openssl pkcs12 -export -out certificate.pfx -inkey privateKey.key -in certificate.crt -certfile CACert.crt","title":"Converting Using OpenSSL"},{"location":"tech/tools/openssl/#how-to-encrypt-and-decrypt-files-with-openssl","text":"Install openssl and the associated development libraries' Run openssl version -a to check if openssl is installed or just run this command to install all requirements for this demo: sudo apt-get install libssl-dev openssl Create a test file named \"plain.txt\" which we shall encrypt & decrypt in the next step. echo \"this is a test\" > plain.txt Encrypt and Decrypt example via Triple Data Encryption Standard The following lines will create the encrypted file \"encrypted.txt\" and decrypted file \"decrypted.txt\" . openssl des3 -in plain.txt -out encrypted.txt -pass pass:password openssl des3 -d -in encrypted.txt -out decrypted.txt -pass pass:password The file \"decrypted.txt\" should match with our test file \"plain.txt\" . diff -s plain.txt decrypted.txt Encrypt and Decrypt example via AES-256 with CBC There are plenty of ciphers availble. Run openssl help to see the cipher commands available too you. Here is another example using AES-256 with CBC. openssl aes-256-cbc -a -salt -in plain.txt -out encrypted.txt -k password openssl aes-256-cbc -d -a -in encrypted.txt -out decrypted.txt -k password Encrypt images using a key and IV openssl aes-128-cbc -K \"55555555555555555555555555555555\" -iv \"83deccd3f93b37c70d37297f319cf367\" -in WRxFKdq.png -out OMG_SAME_IMAGE.png Example screenshot:","title":"How to encrypt and decrypt files with OpenSSL"},{"location":"tech/tools/openssl/#https-webserver","text":"openssl req -x509 -newkey rsa:4096 -keyout /tmp/key.pem -out /tmp/cert.pem -nodes && openssl s_server -WWW -port 8443 -cert /tmp/cert.pem -key /tmp/key.pem openssl req -newkey rsa:2048 -nodes -x509 -subj '/CN=name-you-want.example.com' -days 3650 -out server.cert -keyout server.key openssl s_server -accept 7781 -cert server.cert -key server.key -WWW","title":"HTTPS webserver"}]}